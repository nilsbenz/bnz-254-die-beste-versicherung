{"ast":null,"code":"import _slicedToArray from \"/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/src/components/pages/MainInterface/MainInterface.tsx\";\nimport { Container, createStyles, FormControl, Grid, Input, InputAdornment, InputLabel, makeStyles, MenuItem, Select, TextField, Typography, Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    height: \"2000px\",\n    padding: theme.spacing(3)\n  },\n  form: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    width: \"100%\"\n  }\n}));\n\nconst MainInterface = ({\n  task\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState({\n    variables: {\n      firstname: {\n        value: \"\"\n      },\n      lastname: {\n        value: \"\"\n      },\n      address: {\n        value: \"\"\n      },\n      city: {\n        value: \"\"\n      },\n      email: {\n        value: \"\"\n      },\n      message: {\n        value: \"\"\n      },\n      amount: {\n        value: 0\n      },\n      insurance: {\n        value: null\n      }\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        variables = _useState2[0],\n        setVariables = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstname = _useState4[0],\n        setFirstname = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lastname = _useState6[0],\n        setLastname = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        address = _useState8[0],\n        setAddress = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        city = _useState10[0],\n        setCity = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        email = _useState12[0],\n        setEmail = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        message = _useState14[0],\n        setMessage = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        amount = _useState16[0],\n        setAmount = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        insurance = _useState18[0],\n        setInsurance = _useState18[1];\n\n  if (task) {\n    if (task.taskDefinitionKey === \"recordDamage\") {\n      return React.createElement(Container, {\n        maxWidth: \"sm\",\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, task.name), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Bitte f\\xFClle das nachfolgende Formular aus.\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"firstname\",\n        label: \"Vorname\",\n        value: firstname,\n        onChange: e => setFirstname(e.target.value),\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"lastname\",\n        label: \"Nachname\",\n        value: lastname,\n        onChange: e => setLastname(e.target.value),\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"address\",\n        label: \"Adresse\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"city\",\n        label: \"Stadt\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"email\",\n        label: \"Mailadresse\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"H\\xF6he des Schadensfalls\"), React.createElement(Input, {\n        id: \"amount\",\n        value: amount,\n        onChange: e => !Number.isNaN(Number(e.target.value)) && setAmount(Number(e.target.value)),\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"CHF\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        id: \"insurance-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Welche Versicherung haben Sie abgeschlossen?\"), React.createElement(Select, {\n        labelId: \"insurance-label\",\n        id: \"insurance\",\n        value: insurance,\n        onChange: e => setInsurance(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"bronze\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Bronze\"), React.createElement(MenuItem, {\n        value: \"silver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Silber\"), React.createElement(MenuItem, {\n        value: \"gold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Gold\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"message\",\n        label: \"Ihre Geschichte\",\n        className: classes.textField,\n        multiline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        alignItems: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Erfassen\")))));\n    } else {\n      return React.createElement(Container, {\n        maxWidth: \"sm\",\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, task.name), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Bitte w\\xE4hle einen Task aus der Liste links.\"));\n    }\n  } else {\n    return React.createElement(Container, {\n      maxWidth: \"sm\",\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Kein Task ausgew\\xE4hlt\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Bitte w\\xE4hle einen Task aus der Liste links.\"));\n  }\n};\n\nexport default MainInterface;","map":{"version":3,"sources":["/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/src/components/pages/MainInterface/MainInterface.tsx"],"names":["Container","createStyles","FormControl","Grid","Input","InputAdornment","InputLabel","makeStyles","MenuItem","Select","TextField","Typography","Button","React","useState","useStyles","theme","root","height","padding","spacing","form","marginTop","textField","width","MainInterface","task","classes","variables","firstname","value","lastname","address","city","email","message","amount","insurance","setVariables","setFirstname","setLastname","setAddress","setCity","setEmail","setMessage","setAmount","setInsurance","taskDefinitionKey","name","e","target","Number","isNaN"],"mappings":"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","sourcesContent":["import {\n  Container,\n  createStyles,\n  FormControl,\n  Grid,\n  Input,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Task } from \"../../../types/Task\";\nimport { RecordDamageVariables } from \"../../../types/Variables\";\nimport { stringify } from \"querystring\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"2000px\",\n      padding: theme.spacing(3)\n    },\n    form: {\n      marginTop: theme.spacing(2)\n    },\n    textField: {\n      width: \"100%\"\n    }\n  })\n);\n\ninterface Props {\n  task: Task | null;\n}\n\nconst MainInterface: React.FC<Props> = ({ task }) => {\n  const classes = useStyles();\n\n  const [variables, setVariables] = useState<RecordDamageVariables>({\n    variables: {\n      firstname: { value: \"\" },\n      lastname: { value: \"\" },\n      address: { value: \"\" },\n      city: { value: \"\" },\n      email: { value: \"\" },\n      message: { value: \"\" },\n      amount: { value: 0 },\n      insurance: { value: null }\n    }\n  });\n  const [firstname, setFirstname] = useState<string>(\"\");\n  const [lastname, setLastname] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [city, setCity] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [amount, setAmount] = useState<number>(0);\n  const [insurance, setInsurance] = useState<string>(\"\");\n\n  if (task) {\n    if (task.taskDefinitionKey === \"recordDamage\") {\n      return (\n        <Container maxWidth=\"sm\" className={classes.root}>\n          <Typography variant=\"h4\">{task.name}</Typography>\n          <Typography>Bitte fülle das nachfolgende Formular aus.</Typography>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"firstname\"\n                  label=\"Vorname\"\n                  value={firstname}\n                  onChange={e => setFirstname(e.target.value)}\n                  className={classes.textField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"lastname\"\n                  label=\"Nachname\"\n                  value={lastname}\n                  onChange={e => setLastname(e.target.value)}\n                  className={classes.textField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"address\"\n                  label=\"Adresse\"\n                  value={address}\n                  onChange={e => setAddress(e.target.value)}\n                  className={classes.textField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"city\"\n                  label=\"Stadt\"\n                  value={city}\n                  onChange={e => setCity(e.target.value)}\n                  className={classes.textField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"email\"\n                  label=\"Mailadresse\"\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  className={classes.textField}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl className={classes.textField}>\n                  <InputLabel htmlFor=\"amount\">\n                    Höhe des Schadensfalls\n                  </InputLabel>\n                  <Input\n                    id=\"amount\"\n                    value={amount}\n                    onChange={e =>\n                      !Number.isNaN(Number(e.target.value)) &&\n                      setAmount(Number(e.target.value))\n                    }\n                    startAdornment={\n                      <InputAdornment position=\"start\">CHF</InputAdornment>\n                    }\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl className={classes.textField}>\n                  <InputLabel id=\"insurance-label\">\n                    Welche Versicherung haben Sie abgeschlossen?\n                  </InputLabel>\n                  <Select\n                    labelId=\"insurance-label\"\n                    id=\"insurance\"\n                    value={insurance}\n                    onChange={e => setInsurance(e.target.value)}\n                  >\n                    <MenuItem value={\"bronze\"}>Bronze</MenuItem>\n                    <MenuItem value={\"silver\"}>Silber</MenuItem>\n                    <MenuItem value={\"gold\"}>Gold</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"message\"\n                  label=\"Ihre Geschichte\"\n                  className={classes.textField}\n                  multiline\n                />\n              </Grid>\n              <Grid item xs={12} alignItems=\"flex-end\">\n                <Button variant=\"contained\">Erfassen</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Container>\n      );\n    } else {\n      return (\n        <Container maxWidth=\"sm\" className={classes.root}>\n          <Typography variant=\"h4\">{task.name}</Typography>\n          <Typography>Bitte wähle einen Task aus der Liste links.</Typography>\n        </Container>\n      );\n    }\n  } else {\n    return (\n      <Container maxWidth=\"sm\" className={classes.root}>\n        <Typography variant=\"h4\">Kein Task ausgewählt</Typography>\n        <Typography>Bitte wähle einen Task aus der Liste links.</Typography>\n      </Container>\n    );\n  }\n};\n\nexport default MainInterface;\n"]},"metadata":{},"sourceType":"module"}