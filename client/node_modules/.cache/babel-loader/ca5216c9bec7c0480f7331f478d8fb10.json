{"ast":null,"code":"import _objectSpread from \"/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/src/components/molecules/Sidebar/Sidebar.tsx\";\nimport { Button, createStyles, Drawer, List, ListItem, ListItemText, ListSubheader, makeStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React from \"react\";\nimport TaskService from \"../../../services/taskService\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => createStyles({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  sidebarButton: {\n    width: \"fit-content\",\n    margin: theme.spacing(1, 2)\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  toolbar: _objectSpread({}, theme.mixins.toolbar)\n}));\n\nconst Sidebar = ({\n  addedTask,\n  selectedTask,\n  tasks,\n  reloadTasks\n}) => {\n  const classes = useStyles();\n  const taskService = new TaskService();\n\n  const handleAddTask = async () => {\n    const res = await taskService.start();\n    addedTask(res);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(List, {\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Offene Tasks\"), tasks.map(task => task.taskDefinitionKey === \"recordDamage\" && React.createElement(ListItem, {\n    button: true,\n    key: task.id,\n    onClick: () => selectedTask(task),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: task.name,\n    secondary: new Date(task.created).toLocaleString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleAddTask(),\n    className: classes.sidebarButton,\n    startIcon: React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Neuer Task\"), React.createElement(List, {\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Abgeschlossene Tasks\"), tasks.map(task => task.taskDefinitionKey === \"checkDamage\" && React.createElement(ListItem, {\n    button: true,\n    key: task.id,\n    onClick: () => selectedTask(task),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: task.name,\n    secondary: new Date(task.created).toLocaleString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: reloadTasks,\n    className: classes.sidebarButton,\n    startIcon: React.createElement(UpdateIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Neu laden\")));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/nilsbenz/sources/TBZ/m254/die-beste-versicherung/src/components/molecules/Sidebar/Sidebar.tsx"],"names":["Button","createStyles","Drawer","List","ListItem","ListItemText","ListSubheader","makeStyles","AddIcon","React","TaskService","UpdateIcon","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","sidebarButton","margin","fab","position","bottom","right","toolbar","mixins","Sidebar","addedTask","selectedTask","tasks","reloadTasks","classes","taskService","handleAddTask","res","start","paper","map","task","taskDefinitionKey","id","name","Date","created","toLocaleString"],"mappings":"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","sourcesContent":["import {\n  Button,\n  createStyles,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Theme\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React from \"react\";\nimport TaskService from \"../../../services/taskService\";\nimport { Task } from \"../../../types/Task\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    },\n    sidebarButton: {\n      width: \"fit-content\",\n      margin: theme.spacing(1, 2)\n    },\n    fab: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    toolbar: { ...theme.mixins.toolbar }\n  })\n);\n\ninterface Props {\n  tasks: Task[];\n  addedTask: (task: Task) => Promise<void>;\n  selectedTask: (task: Task) => void;\n  reloadTasks: () => void;\n}\n\nconst Sidebar: React.FC<Props> = ({\n  addedTask,\n  selectedTask,\n  tasks,\n  reloadTasks\n}) => {\n  const classes = useStyles();\n  const taskService: TaskService = new TaskService();\n\n  const handleAddTask = async () => {\n    const res = await taskService.start();\n    addedTask(res);\n  };\n\n  return (\n    <div>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.toolbar} />\n        <List dense>\n          <ListSubheader>Offene Tasks</ListSubheader>\n          {tasks.map(\n            (task: Task) =>\n              task.taskDefinitionKey === \"recordDamage\" && (\n                <ListItem\n                  button\n                  key={task.id}\n                  onClick={() => selectedTask(task)}\n                >\n                  <ListItemText\n                    primary={task.name}\n                    secondary={new Date(task.created).toLocaleString()}\n                  />\n                </ListItem>\n              )\n          )}\n        </List>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleAddTask()}\n          className={classes.sidebarButton}\n          startIcon={<AddIcon />}\n        >\n          Neuer Task\n        </Button>\n        <List dense>\n          <ListSubheader>Abgeschlossene Tasks</ListSubheader>\n          {tasks.map(\n            (task: Task) =>\n              task.taskDefinitionKey === \"checkDamage\" && (\n                <ListItem\n                  button\n                  key={task.id}\n                  onClick={() => selectedTask(task)}\n                >\n                  <ListItemText\n                    primary={task.name}\n                    secondary={new Date(task.created).toLocaleString()}\n                  />\n                </ListItem>\n              )\n          )}\n        </List>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={reloadTasks}\n          className={classes.sidebarButton}\n          startIcon={<UpdateIcon />}\n        >\n          Neu laden\n        </Button>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}